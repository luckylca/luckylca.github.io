<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>teat_life</title>
    <url>/2024/11/02/teat-life/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
  <entry>
    <title>单片机系列</title>
    <url>/2024/11/03/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[<h1 id="单片机系列"><a href="#单片机系列" class="headerlink" title="单片机系列"></a>单片机系列</h1><p>此文章记录我学单片机进程，以及所写的代码集合，当作笔记和备份吧，以后可以温习用。</p>
<p>目前正在学的是51单片机，普中A2版本。</p>
<p>先上张原理图</p>
<p><img src="/2024/11/03/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E5%88%97/%E6%99%AE%E4%B8%AD-2&%E6%99%AE%E4%B8%AD-3&%E6%99%AE%E4%B8%AD-4%E5%BC%80%E5%8F%91%E6%9D%BF%E5%8E%9F%E7%90%86%E5%9B%BE.jpg" alt="开发板原理图"></p>
<p>再来张十六进制换算表</p>
<p><img src="/2024/11/03/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E5%88%97/CRnall_20241103_004139503.jpg" alt="十六进制"></p>
<h2 id="LED模块"><a href="#LED模块" class="headerlink" title="LED模块"></a>LED模块</h2><h3 id="最简单的点灯代码"><a href="#最简单的点灯代码" class="headerlink" title="最简单的点灯代码"></a>最简单的点灯代码</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">	P2 = 0xFE;</span></span><br><span class="line"><span class="code">	while(1)</span></span><br><span class="line"><span class="code">	&#123;&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>



<h3 id="控制点灯时间代码"><a href="#控制点灯时间代码" class="headerlink" title="控制点灯时间代码"></a>控制点灯时间代码</h3><p>通过软件内置的时间延迟计算生成函数，来控制时间。</p>
<p><img src="/2024/11/03/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E5%88%97/blog\source_posts\单片机系列\CRnall_20241103_233001031.jpg" alt="CRnall_20241103_233001031"></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">INTRINS.H</span>&gt;</span></span></span></span><br><span class="line">void Delay500ms()		//@12.000MHz</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">	unsigned char i, j, k;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">	_nop_();</span></span><br><span class="line"><span class="code">	i = 4;</span></span><br><span class="line"><span class="code">	j = 205;</span></span><br><span class="line"><span class="code">	k = 187;</span></span><br><span class="line"><span class="code">	do</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		do</span></span><br><span class="line"><span class="code">		&#123;</span></span><br><span class="line"><span class="code">			while (--k);</span></span><br><span class="line"><span class="code">		&#125; while (--j);</span></span><br><span class="line"><span class="code">	&#125; while (--i);</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">void main()</span><br><span class="line">&#123; </span><br><span class="line"><span class="code">	while(1)</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">	P2=0xFE;</span></span><br><span class="line"><span class="code">	Delay500ms();	</span></span><br><span class="line"><span class="code">	P2=0xFF;</span></span><br><span class="line"><span class="code">	Delay500ms();</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure>



<h3 id="流水灯代码"><a href="#流水灯代码" class="headerlink" title="流水灯代码"></a>流水灯代码</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line">void Delay1ms(unsigned int xms)		//@12MHz</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">	unsigned char i, j;</span></span><br><span class="line"><span class="code">	while(xms)&#123;</span></span><br><span class="line"><span class="code">		i = 2;</span></span><br><span class="line"><span class="code">		j = 239;</span></span><br><span class="line"><span class="code">		do</span></span><br><span class="line"><span class="code">		&#123;</span></span><br><span class="line"><span class="code">			while (--j);</span></span><br><span class="line"><span class="code">		&#125; while (--i);</span></span><br><span class="line"><span class="code">		xms--;</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">	</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">while(1)</span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		P2=0xFE;</span></span><br><span class="line"><span class="code">		Delay1ms(120);</span></span><br><span class="line"><span class="code">		P2=0xFD;</span></span><br><span class="line"><span class="code">		Delay1ms(500);</span></span><br><span class="line"><span class="code">		P2=0xFB;</span></span><br><span class="line"><span class="code">		Delay1ms(100);</span></span><br><span class="line"><span class="code">		P2=0xF7;</span></span><br><span class="line"><span class="code">		Delay1ms(200);</span></span><br><span class="line"><span class="code">		P2=0xEF;</span></span><br><span class="line"><span class="code">		Delay1ms(500);</span></span><br><span class="line"><span class="code">		P2=0xDF;</span></span><br><span class="line"><span class="code">		Delay1ms(400);</span></span><br><span class="line"><span class="code">		P2=0xBF;</span></span><br><span class="line"><span class="code">		Delay1ms(300);</span></span><br><span class="line"><span class="code">		P2=0x7F;</span></span><br><span class="line"><span class="code">		Delay1ms(100);</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure>



<p>通过调整函数变量，可以自由决定每一个灯亮起的时间跟间隔。</p>
<h3 id="按钮控制点灯v1"><a href="#按钮控制点灯v1" class="headerlink" title="按钮控制点灯v1"></a>按钮控制点灯v1</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line">void main()</span><br><span class="line">&#123;	while(1)</span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		if(P3_1==0)</span></span><br><span class="line"><span class="code">		&#123;</span></span><br><span class="line"><span class="code">			P2_0=0;</span></span><br><span class="line"><span class="code">		&#125;</span></span><br><span class="line"><span class="code">		else</span></span><br><span class="line"><span class="code">			P2_0=1;</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure>



<p>可以通过按钮的判断来控制小灯的亮灭了，但是这些代码只能需要按钮一直按下才可以把灯点亮，如果松开按钮灯就灭了，而且没有消抖。</p>
<h3 id="按钮控制点灯v2"><a href="#按钮控制点灯v2" class="headerlink" title="按钮控制点灯v2"></a>按钮控制点灯v2</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line"></span><br><span class="line">void Delay1ms(unsigned int xms)		//@12MHz</span><br><span class="line">&#123;	unsigned char i, j;</span><br><span class="line">while(xms&gt;0)&#123;</span><br><span class="line"><span class="code">	i = 2;</span></span><br><span class="line"><span class="code">	j = 239;</span></span><br><span class="line"><span class="code">	do</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		while (--j);</span></span><br><span class="line"><span class="code">	&#125; while (--i);</span></span><br><span class="line"><span class="code">	xms--;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">void main()</span></span><br><span class="line"><span class="code">&#123;P2_0=0;</span></span><br><span class="line"><span class="code">	while(1)</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		if(P3_1==0)</span></span><br><span class="line"><span class="code">		&#123;	Delay1ms(20);</span></span><br><span class="line"><span class="code">			while(P3_1==0);</span></span><br><span class="line"><span class="code">			Delay1ms(20);</span></span><br><span class="line"><span class="code">			P2_0=~P2_0;</span></span><br><span class="line"><span class="code">		&#125;</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure>



<p>这个就相对完善了很多了，已经可以实现按钮按一次就会一直亮，再按就灭的功能，而且也加入了延时来消除抖动。也引入了位运算，可以通过取反来更加便捷地控制小灯亮灭。</p>
<h3 id="按钮控制点灯v3"><a href="#按钮控制点灯v3" class="headerlink" title="按钮控制点灯v3"></a>按钮控制点灯v3</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line">char LEDNum=0;</span><br><span class="line">void delay(int xms)		//@12MHz</span><br><span class="line">&#123;while(xms)</span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">	unsigned char i, j;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">	i = 2;</span></span><br><span class="line"><span class="code">	j = 239;</span></span><br><span class="line"><span class="code">	do</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		while (--j);</span></span><br><span class="line"><span class="code">	&#125; while (--i);</span></span><br><span class="line"><span class="code">	xms--;</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">void main()</span></span><br><span class="line"><span class="code">&#123;	 P2=~0x01;</span></span><br><span class="line"><span class="code">	while(1)</span></span><br><span class="line"><span class="code">	&#123;	</span></span><br><span class="line"><span class="code">		if(P3_1==0)     //实现左移</span></span><br><span class="line"><span class="code">		&#123;</span></span><br><span class="line"><span class="code">			delay(30);</span></span><br><span class="line"><span class="code">			while(P3_1==0)</span></span><br><span class="line"><span class="code">			delay(30);</span></span><br><span class="line"><span class="code">			LEDNum++;</span></span><br><span class="line"><span class="code">			if(LEDNum==8)</span></span><br><span class="line"><span class="code">				LEDNum=0;</span></span><br><span class="line"><span class="code">		&#125;</span></span><br><span class="line"><span class="code">			P2 =~(0x01&lt;&lt;LEDNum);</span></span><br><span class="line"><span class="code">				if(P3_0==0)  //实现右移</span></span><br><span class="line"><span class="code">		&#123;</span></span><br><span class="line"><span class="code">			delay(30);</span></span><br><span class="line"><span class="code">			while(P3_0==0)</span></span><br><span class="line"><span class="code">			delay(30);	</span></span><br><span class="line"><span class="code">			if(LEDNum==0)</span></span><br><span class="line"><span class="code">				LEDNum=7;		</span></span><br><span class="line"><span class="code">			else</span></span><br><span class="line"><span class="code">				LEDNum--;</span></span><br><span class="line"><span class="code">			P2 =~(0x01&lt;&lt;LEDNum);		</span></span><br><span class="line"><span class="code">		&#125;</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure>



<p>通过if语句和一个中间变量再加上移位运算和取反运算，最终实现了用两个按钮来控制小灯的亮起的左移和右移，并且对小灯在边缘亮起的情况做了处理，让其可以正常运行。</p>
<h2 id="静态数码管显示"><a href="#静态数码管显示" class="headerlink" title="静态数码管显示"></a>静态数码管显示</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line">unsigned char nixietable[]=&#123;0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,0x00&#125;;</span><br><span class="line">void nixie(unsigned char location,number)</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">	switch(location)</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		case 1:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=1;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 2:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=1;P2_2=0;break;</span></span><br><span class="line"><span class="code">		case 3:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=0;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 4:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=0;P2_2=0;break;</span></span><br><span class="line"><span class="code">		case 5:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=1;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 6:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=1;P2_2=0;break;</span></span><br><span class="line"><span class="code">		case 7:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=0;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 8:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=0;P2_2=0;break;	</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">P0=nixietable[number];</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">void main()</span></span><br><span class="line"><span class="code">&#123;	nixie(2,3);</span></span><br><span class="line"><span class="code">	while(1)</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure>



<p>定义了一个nixie的函数，用来更为方便的控制静态数码管，数码管的控制主要有两个来决定，一个是位，一个是数，在51单片机中，代码中的switch判断所控制的就是数码管的位置，采用的是38译码器，通过三个数的0和1来表示8个位置的数码管，大限度的减短控制所需要的接口，非常的巧妙，而代码中的nixietable数组则是控制显示的数字，通过十六进制的数字来控制所显示的东西，一切都刚刚好，具体可以去看原理图，如果使用的话，调用现成的库就足够了。</p>
<p>但是，这套控制系统虽然简单，只用了很少的接口，但是也有局限性，就是一次只能表示一个位置的一个数字，所以就有了动态数码管。</p>
<h2 id="动态数码管"><a href="#动态数码管" class="headerlink" title="动态数码管"></a>动态数码管</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#include <span class="language-xml"><span class="tag">&lt;<span class="name">REGX52.H</span>&gt;</span></span></span></span><br><span class="line">unsigned char nixietable[]=&#123;0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71,0x00&#125;;</span><br><span class="line">void delay(int xms)		//@12MHz</span><br><span class="line">&#123;</span><br><span class="line"><span class="code">	unsigned char i, j;</span></span><br><span class="line"><span class="code">while(xms)&#123;</span></span><br><span class="line"><span class="code">	i = 2;</span></span><br><span class="line"><span class="code">	j = 239;</span></span><br><span class="line"><span class="code">	do</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		while (--j);</span></span><br><span class="line"><span class="code">	&#125; while (--i);xms--;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">void nixie(unsigned char location,number)</span></span><br><span class="line"><span class="code">&#123;</span></span><br><span class="line"><span class="code">	switch(location)</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">		case 1:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=1;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 2:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=1;P2_2=0;break;</span></span><br><span class="line"><span class="code">		case 3:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=0;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 4:</span></span><br><span class="line"><span class="code">			P2_4=1;P2_3=0;P2_2=0;break;</span></span><br><span class="line"><span class="code">		case 5:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=1;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 6:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=1;P2_2=0;break;</span></span><br><span class="line"><span class="code">		case 7:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=0;P2_2=1;break;</span></span><br><span class="line"><span class="code">		case 8:</span></span><br><span class="line"><span class="code">			P2_4=0;P2_3=0;P2_2=0;break;	</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">P0=nixietable[number];</span></span><br><span class="line"><span class="code">delay(1);</span></span><br><span class="line"><span class="code">	P0=0x00;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">void main()</span></span><br><span class="line"><span class="code">&#123;	</span></span><br><span class="line"><span class="code">	while(1)</span></span><br><span class="line"><span class="code">	&#123;</span></span><br><span class="line"><span class="code">	nixie(1,1);delay(5);</span></span><br><span class="line"><span class="code">	nixie(2,2);delay(5);</span></span><br><span class="line"><span class="code">	nixie(3,3);delay(5);</span></span><br><span class="line"><span class="code">	&#125;</span></span><br><span class="line"><span class="code">&#125;</span></span><br></pre></td></tr></table></figure>



<p>这个就已经比较完善了，通过delay延时，利用人眼的延时，只要变化的够快，人眼就感知不出来（doge）。</p>
<p>同时呢，也加入了消隐，可以避免数码管显示出错，当然，也可以让延时改为1毫秒，也可以避免显示出错。</p>
<p><img src="/2024/11/03/%E5%8D%95%E7%89%87%E6%9C%BA%E7%B3%BB%E5%88%97/8C07D227036A5E8622746F2B68EEAFC0.jpg" alt="666显示"></p>
<h2 id="模块化编程"><a href="#模块化编程" class="headerlink" title="模块化编程"></a>模块化编程</h2><p>这是一种方法，我们可以将一些函数打包成一个.c文件和一个.h文件，只要做好声明并调用，就可以非常方便的使用这些函数了，并且也容易分享和修改。</p>
<p>下面是一个.h文件的示例</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#ifndef <span class="strong">__DELAY<span class="emphasis">_H_</span>_</span></span></span><br><span class="line"><span class="strong"><span class="section">#define __</span>DELAY<span class="emphasis">_H_</span>_</span></span><br><span class="line">void delay(int xms);</span><br><span class="line"><span class="section">#endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>.c文件就是类似于自定义函数的写法，放在同一目录下就可以正常使用了。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>单片机</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次离谱的刷机经历</title>
    <url>/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/</url>
    <content><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>在我爸换新手机后，我果断拿掉了我爸的旧手机，想来锻炼我的刷机技巧，我爸的手机是努比亚z17，已经非常老了，但在当时这台手机可是非常出名的，酷安评分非常高，刷机资源也比较多，我于是便开始了我的刷机操作。</p>
<h1 id="经历"><a href="#经历" class="headerlink" title="经历"></a>经历</h1><p>这款机型的刷机本来应该就是一个行云流水的通用刷机操作，努比亚z17有bl锁，只需要每次输一次解锁命令就可以解bl锁，非常容易，但是我却碰到了个非常棘手的情况。</p>
<p><img src="/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/147DDA3A399B7028E94DA70AEB855EA9.jpg" alt="故障1"></p>
<p><img src="/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/0F5E47584C7EA15BE8769031F2B066AF.jpg" alt="故障2"></p>
<p>特别离谱是吧。就是这样子的，adb devices跟fastboot devices可以正常读取到设备，但就是传不了boot.img到机器上，bl锁也显示已经解了，各种不同的原因报错，我找了整整几个小时，换了无数根线，甚至还担心是不是接口2.0的问题，还换了台电脑测试，结果就只是报错的原因不一样。</p>
<p>我真的几乎放弃了，已经不打算刷机了，无聊地刷着酷安，也在徒劳的问大佬们问题，酷安一位酷u给我推荐了某贼的一篇文章，就是针对这台设备通过9008授权深刷的，本身这台机子进入9008模式不需要工程线，或者拆机短接等复杂的操作，直接在fb界面就可以进入9008了。</p>
<p>于是，我带着仅剩的一点希望，下载某贼的深刷包，开始下一次测试。</p>
<p><img src="/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/26F4F6D59768EDD41DDD40BD92811E61.jpg" alt="9008"></p>
<p>可是没想到又翻车了。</p>
<p><img src="/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/6C76DD8FB7980640E3EA4AED489F93C4.jpg" alt="9008故障"></p>
<p>后来我灵机一动，想到我在安装一个驱动提示要重启时，没有理这个重启提示，直接进行操作了，难怪报错了。</p>
<p>重启后再试了一次，非常成功，从安卓8升到了安卓9，fastboot也可以正常使用了，twrp，启动！</p>
<p><img src="/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/6B22BBA244B574F699C845781E012A7A.jpg" alt="trwp1"></p>
<p><img src="/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/47304F0030363AB5DECB43089BD89B01.jpg" alt="twrp2"></p>
<p>非常丝滑的一顿操作，修补镜像，刷入magisk，成功获取root权限，也成功开始使用魔趣类原生，真没想到，魔趣系统虽然已经停止运营了，但我仍然再sourceforge平台上找到了他的包，甚至还是专门针对努比亚z17做的包，哎，这是上一个刷机时代的眼泪啊，酷安遗风了。</p>
<p>附张使用图</p>
<p><img src="/2024/11/02/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%A6%BB%E8%B0%B1%E7%9A%84%E5%88%B7%E6%9C%BA/60105DFB27E857021D7BC119FC4285FC.jpg" alt="moqu"></p>
<p>接着刷入了gaps，美滋滋，这一段玩机之旅也告一段落了。</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>这或许就是刷机搞机的魅力吧，你可能会碰到无数问题，任何一个细节的问题都是致命的，比如中文路径什么的，但是解决了却非常有成就感，其实我看的某贼的那篇文章，是为了解决努比亚z17获取永久bl权限的，只有那个版本的包可以一行代码永久去除bl锁，但是却误打误撞解决了我的问题。</p>
<p>这次经历也告诉我们，碰到这种离奇的报错，可能是系统问题，尝试用9008或者com1.0深刷换一个系统，说不定有机会解决，我碰到的这个问题，网上我目前还没找到类似的问题和解决方案。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>刷机</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2024/11/02/test/</url>
    <content><![CDATA[<p>Markdown 是一种轻量级的标记语言，用于格式化纯文本。它允许您以简单的方式添加格式，而不需要复杂的 HTML 标签。以下是一些常用的 Markdown 语法：</p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>

<h4 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a>段落和换行</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个段落。</span><br><span class="line"></span><br><span class="line">这是另一个段落。</span><br></pre></td></tr></table></figure>

<h4 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="emphasis">_斜体_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line"><span class="strong">__粗体__</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体*</span>**</span></span><br><span class="line"><span class="strong">__<span class="emphasis">_粗斜体_</span>__</span></span><br></pre></td></tr></table></figure>

<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><ul>
<li><p><strong>无序列表</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 列表项1</span><br><span class="line"><span class="bullet">-</span> 列表项2</span><br><span class="line"><span class="bullet">-</span> 列表项3</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>有序列表</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 列表项1</span><br><span class="line"><span class="bullet">2.</span> 列表项2</span><br><span class="line"><span class="bullet">3.</span> 列表项3</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>嵌套列表</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 列表项1</span><br><span class="line"><span class="bullet">   -</span> 子列表项1</span><br><span class="line"><span class="bullet">   -</span> 子列表项2</span><br><span class="line"><span class="bullet">2.</span> 列表项2</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">链接文本</span>](<span class="link">URL</span>)</span><br></pre></td></tr></table></figure>

<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">替代文本</span>](<span class="link">图片URL</span>)</span><br></pre></td></tr></table></figure>

<h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><ul>
<li><p><strong>内联代码</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`这是内联代码`</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>多行代码块</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">```语言</span></span><br><span class="line"><span class="code">这是多行代码块</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### 引用</span><br><span class="line">```markdown</span><br><span class="line">&gt; 这是一个引用块。</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure>

<h3 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h3><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 列1 | 列2 | 列3 |</span><br><span class="line">| --- | --- | --- |</span><br><span class="line">| 内容1 | 内容2 | 内容3 |</span><br><span class="line">| 内容4 | 内容5 | 内容6 |</span><br></pre></td></tr></table></figure>

<h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure>

<h4 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> [x] 已完成的任务</span><br><span class="line"><span class="bullet">-</span> [ ] 未完成的任务</span><br></pre></td></tr></table></figure>

<h4 id="表情符号"><a href="#表情符号" class="headerlink" title="表情符号"></a>表情符号</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">:smile:</span><br></pre></td></tr></table></figure>

<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="综合示例"><a href="#综合示例" class="headerlink" title="综合示例"></a>综合示例</h4><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 我的第一篇 Markdown 文章</span></span><br><span class="line"></span><br><span class="line">这是一个段落。接下来是一些 <span class="strong">**粗体**</span> 和 <span class="emphasis">*斜体*</span> 的文字。</span><br><span class="line"></span><br><span class="line"><span class="section">## 子标题</span></span><br><span class="line"></span><br><span class="line">这是一个无序列表：</span><br><span class="line"><span class="bullet">-</span> 列表项1</span><br><span class="line"><span class="bullet">-</span> 列表项2</span><br><span class="line"><span class="bullet">-</span> 列表项3</span><br><span class="line"></span><br><span class="line">这是一个有序列表：</span><br><span class="line"><span class="bullet">1.</span> 列表项1</span><br><span class="line"><span class="bullet">2.</span> 列表项2</span><br><span class="line"><span class="bullet">3.</span> 列表项3</span><br><span class="line"></span><br><span class="line">这是一个链接：[<span class="string">百度</span>](<span class="link">https://www.baidu.com</span>)</span><br><span class="line"></span><br><span class="line">这是一个图片：</span><br><span class="line">![<span class="string">Markdown Logo</span>](<span class="link">https://markdown-guide-images.vercel.app/logo-markdown.png</span>)</span><br><span class="line"></span><br><span class="line">这是一个代码块：</span><br><span class="line"><span class="code">```python</span></span><br><span class="line"><span class="code">def hello_world():</span></span><br><span class="line"><span class="code">    print(&quot;Hello, world!&quot;)</span></span><br></pre></td></tr></table></figure>

<p>这是一个引用：</p>
<blockquote>
<p>这是一个引用块。</p>
</blockquote>
<h2 id="这是一个水平线："><a href="#这是一个水平线：" class="headerlink" title="这是一个水平线："></a>这是一个水平线：</h2><p>这是一个表格：</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>年龄</th>
<th>地址</th>
</tr>
</thead>
<tbody><tr>
<td>张三</td>
<td>25</td>
<td>北京</td>
</tr>
<tr>
<td>李四</td>
<td>30</td>
<td>上海</td>
</tr>
</tbody></table>
<p>这是一个删除线：<br><del>错误的信息</del></p>
<p>这是一个任务列表：</p>
<ul>
<li><input checked disabled type="checkbox"> 已完成的任务</li>
<li><input disabled type="checkbox"> 未完成的任务</li>
</ul>
<p>这是一个表情符号：<br>:smile:</p>
<pre><code>
希望这些示例和语法能帮助您更好地使用 Markdown。如果您有任何具体问题或需要进一步的帮助，请随时提问！
</code></pre>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title>11月札记</title>
    <url>/2024/11/05/11%E6%9C%88%E6%9C%AD%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="11-2"><a href="#11-2" class="headerlink" title="11.2"></a>11.2</h3><p>图书协会活动——图书馆看番</p>
<p>也是喜欢上了老八。</p>
<p><img src="/2024/11/05/11%E6%9C%88%E6%9C%AD%E8%AE%B0/6778B314F59B2F02621AC44DD791A6E0.jpg" alt="6778B314F59B2F02621AC44DD791A6E0"></p>
<p>顺便记录一下图书馆地图</p>
<p><img src="/2024/11/05/11%E6%9C%88%E6%9C%AD%E8%AE%B0/92407026223B2A53F8948AED0117C7E0.jpg" alt="92407026223B2A53F8948AED0117C7E0"></p>
<h3 id="11-4"><a href="#11-4" class="headerlink" title="11.4"></a>11.4</h3><p>西门外的卤肉店</p>
<p><img src="/2024/11/05/11%E6%9C%88%E6%9C%AD%E8%AE%B0/15FF5EAD53B8A222749F1B697FAE7BD0.jpg" alt="15FF5EAD53B8A222749F1B697FAE7BD0"></p>
<p>这一碗加上饭才13，也是爽爽的吃撑了。</p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>札记</tag>
      </tags>
  </entry>
</search>
